.container
  = form_for [@zone, @record] do |f|
    = f.error_messages
    .box.island.island--form.module
      .formGroup.formRow
        .formRow__col.formRow__col--max
          = f.label :name, "Name", :class => "formLabel"
          = f.text_field :name, :autofocus => true, :class => "formControl"
        .formRow__col.formRow__col--min
          = f.label :type, "Type", :class => "formLabel"
          = f.select :type, options_for_select(Bound::RecordType.all.values.map { |rt| [rt.class.type_name, rt.class.name] }, f.object.type.class.name), {}, :class => "formControl formControl--select js-record-type-select"
        .formRow__col.formRow__col--min
          = f.label :ttl, "TTL", :class => "formLabel"
          = f.text_field :ttl, :class => "formControl", :placeholder => @zone.ttl
    .module
      .box.island.island--form
        .recordRows
          - Bound::RecordType.all.each do |key, type|
            - type.fields.each do |field|
              .recordRows__col{:class => ("recordRows__col--full" if key == "Bound::BuiltinRecordTypes::TXT"), :data => {:type => key}}
                = label_tag "record_form_data_#{field[:name]}", field[:label], :class => "formLabel"
                = record_type_field_tag @record, type, field
      .formFooter.module.module--push
        = f.submit "Save Record", :class => "button button--green"
        %p.formFooter__subText
          - if @record.persisted?
            = link_to "Delete Record", [@zone, @record], :method => :delete, :data => {:confirm => "Are you sure you wish to delete this record?"}, :class => "button button--red"
        = link_to "Cancel", @zone, :class => "button button--secondary"

